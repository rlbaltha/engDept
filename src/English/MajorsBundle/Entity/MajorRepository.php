<?php

namespace English\MajorsBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * MajorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MajorRepository extends EntityRepository
{
    public function findMajors()
    {
        return $this->getEntityManager()
            ->createQuery("SELECT m.id,m.name,m.email,a.name as aName,e.name as eName,m.firstMajor,m.secondMajor,m.aoe,m.updated,m.hours,m.can,m.checkedin,m.gpa
             FROM EnglishMajorsBundle:Major m JOIN m.advisor a JOIN m.mentor e WHERE m.status=0 ORDER BY m.name ASC")
            ->getResult();
    }

    public function findMajorsByUsername($username)
    {
        return $this->getEntityManager()
            ->createQuery("SELECT m.id,m.name,m.email,a.name as aName,e.name as eName,m.firstMajor,m.secondMajor,m.updated,m.aoe,m.checkedin,m.can,m.hours,m.gpa
             FROM EnglishMajorsBundle:Major m JOIN m.advisor a JOIN m.mentor e
             WHERE  m.status=0 AND (e.username = ?1 or a.username = ?1) ORDER BY m.name ASC")
            ->setParameter('1',$username)->getResult();
    }

    public function findMajorsByAdvisor($id)
    {
        return $this->getEntityManager()
            ->createQuery("SELECT m.id,m.name,m.email,a.name as aName,e.name as eName,m.firstMajor,m.secondMajor,m.aoe,m.updated,m.hours,m.can,m.checkedin,m.gpa
             FROM EnglishMajorsBundle:Major m JOIN m.advisor a JOIN m.mentor e WHERE m.status=0 AND a.id = ?1 ORDER BY m.name ASC")
            ->setParameter('1',$id)->getResult();
    }

    public function findMajorsByMentor($id)
    {
        return $this->getEntityManager()
            ->createQuery("SELECT m.id,m.name,m.email,a.name as aName,e.name as eName,m.firstMajor,m.secondMajor,m.aoe,m.updated,m.hours,m.can,m.checkedin,m.gpa
            FROM EnglishMajorsBundle:Major m JOIN m.advisor a JOIN m.mentor e WHERE m.status=0 AND e.id = ?1 ORDER BY m.name ASC")
            ->setParameter('1',$id)->getResult();
    }


    public function findMajorsByName($name)
    {
        return $this->getEntityManager()
            ->createQuery("SELECT m.id,m.name,m.email,a.name as aName,e.name as eName,m.firstMajor,m.secondMajor,m.aoe,m.updated,m.hours,m.can,m.checkedin,m.gpa
            FROM EnglishMajorsBundle:Major m JOIN m.advisor a JOIN m.mentor e WHERE m.status=0 AND LOWER(m.name) LIKE ?1 ORDER BY m.name")
            ->setParameter('1',$name)->getResult();
    }


    public function findMajorNotesByAdvisor($id)
    {
        return $this->getEntityManager()
            ->createQuery("SELECT n.id,n.notes,n.updated, p.lastName, p.firstName
                FROM EnglishMajornotesBundle:Majornote n JOIN EnglishPeopleBundle:People p WHERE n.userid=p.id AND n.mentorId = ?1 ORDER BY n.created DESC")
            ->setParameter('1',$id)->getResult();
    }

}